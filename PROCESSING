//processing
import com.sun.corba.se.impl.protocol.giopmsgheaders.Message;
import processing.serial.*;

Serial commPort;

float tempC = 0;
float tempF = 0;
float RH;
float y, h, msbyte, lsbyte;

int yDist, xx=-15;

PFont font12;
PFont font24;

PrintWriter output;

void setup() {
  font12 = createFont("Arial", 12);
  font24 = createFont("Arial", 20);
  commPort = new Serial(this, "COM4", 9600);
  size(900, 500);
  surface.setResizable(true);
  output = createWriter( "data logger.txt");
}

int flag=0;
int stato=0;

void draw() {
  background(150);
  commPort.clear();
  if (mousePressed && flag==0) {
    stato=1;
    commPort.write('1');
    println("1");
    delay(1000);
    flag=1;
  } else if (mousePressed && flag==1) {
    stato=0;
    commPort.write('0');
    println("0");
    delay(1000);
    flag=0;
  }
  delay(100);

  // Rettangolo dati ambientali
  fill(120);
  stroke(0);
  strokeWeight(1);
  rect(10, 10, 180, 140, 7);
  line(10, 83, 190, 83);
  rect(10, 180, 190, 180, 7);
  fill(0, 0, 0);
  textFont(font24);
  textAlign(LEFT);
  //text("Dati Ambientali", 20,35);
  text("Temperatura: ", 20, 45);
  text("°C", 70, 70);
  text(nfc(tempC, 1), 20, 75);

  /*
  text("°F", 70, 100);
   text(nfc(tempF, 1), 20, 100);
   */
  text("Umidità: ", 20, 105);
  text("% UR", 70, 130);
  text(nfc(RH, 0), 20, 130);

  //pulsante
  fill(255);
  rect(10, 180, 200, 210, 7);
  //rect(10,160, 190, 160, 7);
  fill(255, 0, 0);
  circle(110, 305, 150);
  fill(255);
  rect(105, 260, 10, 70);
  rect(105, 335, 10, 10);

  textSize(25);
  fill(255, 0, 0);
  text("EMERGENZA", 33, 220);
  if (stato == 1) {
    text("STATO: OFF", 10, 420);
  } else {
    text("STATO: ON", 10, 420);
  }

  rettangolo_uno();
  termometro();
  goccia();
  quadrato();

  //LED CLIMATIZZAZIONE
  led_climatizzazione_spento();

  if (tempC>26) { //mettere 26
    led_raffreddamento_acceso();
    textSize(15);
    fill(0, 0, 255);
    text("CLIMATIZZAZIONE: RAFFREDADENTO", 360, 465);
  } else if (tempC<18) { //mettere 18
    led_riscaldamento_acceso();
    textSize(15);
    fill(255, 120, 0);
    text("CLIMATIZZAZIONE: RISCALDAMENTO", 360, 465);
  } else {
    textSize(15);
    fill(255, 255, 255);
    text("CLIMATIZZAZIONE: SPENTA", 390, 465);
  }
}

void serialEvent(Serial p) {
  // get message till line break (ASCII > 13)
  //if(commPort.available()>0){
  String message = p.readStringUntil(13);
  //}
  if (message != null) {
    // try catch function because of possible garbage in received data
    try {
      String[] elements = splitTokens(message);
      RH = float(elements[0]);
      tempC = float(elements[1]);
      //tempF = (((tempC)*9)/5) + 32;

      println("tempC: "+tempC);
      println("tempF: "+ (int)tempF);
      println("RH: "+RH);
      output.println(day()+"/"+month()+"/"+year()+"-->"+"  "+hour()+":"+minute()+":"+second()+"   "+"TEMPERATURA:  "+tempC+"   "+"UMIDITA'  "+RH); 
      output.flush();
    }
    catch (Exception e) {
    }
  }
}


//rettangoli di base per termometro e goccia
void rettangolo_uno() {
  fill(120);
  stroke(0);
  strokeWeight(1);
  rect(300, 10, 180, 300, 7);
  rect(500, 10, 180, 300, 7);
  fill(0, 0, 0);
  textFont(font24);
  textAlign(LEFT);
}


//LED CLIMATIZZAZIONE
void led_climatizzazione_spento() { 
  strokeWeight(3);
  fill(255, 255, 255);
  stroke(0);
  rect(480, 385, 4, 35);
  rect(490, 385, 4, 27);
  stroke(0);
  arc(487, 357, 25, 25, -PI, 0);
  noStroke();
  rect(475, 357, 25, 16);
  stroke(0);
  rect(469, 374, 35, 11);
  stroke(10);
  fill(127);
  rect(480, 385, 4, 35);
  rect(490, 385, 4, 27);
  line(499, 358, 499, 374);
  line(474, 358, 474, 374);
  noStroke();
}

void led_riscaldamento_acceso() { 
  strokeWeight(3);
  fill(255, 120, 0);
  stroke(0);
  rect(480, 385, 4, 35);
  rect(490, 385, 4, 27);
  stroke(0);
  arc(487, 357, 25, 25, -PI, 0);
  noStroke();
  rect(475, 357, 25, 16);
  stroke(0);
  rect(469, 374, 35, 11);
  stroke(10);
  fill(127);
  rect(480, 385, 4, 35);
  rect(490, 385, 4, 27);
  line(499, 358, 499, 374);
  line(474, 358, 474, 374);
  noStroke();
}

void led_raffreddamento_acceso() { 
  strokeWeight(3);
  fill(0, 0, 255);
  stroke(0);
  rect(480, 385, 4, 35);
  rect(490, 385, 4, 27);
  stroke(0);
  arc(487, 357, 25, 25, -PI, 0);
  noStroke();
  rect(475, 357, 25, 16);
  stroke(0);
  rect(469, 374, 35, 11);
  stroke(10);
  fill(127);
  rect(480, 385, 4, 35);
  rect(490, 385, 4, 27);
  line(499, 358, 499, 374);
  line(474, 358, 474, 374);
  noStroke();
}

void termometro() {
  //mercurio

  fill(255);
  rect(385, 25, 10, 240);
  //bulbo

  fill(200, 0, 0);
  ellipse(390, 265, 25, 25);
  noStroke();
  fill(200, 0, 0);
  h = 4.8*(tempC);
  rect(385, 265, 10, -h);
  int i;
  fill(0);
  for (i=0; i<6; i++) {
    fill(0);
    line(390, 275-48*i, 400, 265-48*i);
    //textAlign(LEFT);
    fill(255);
    textFont(font12);
    text(str(0+10*i), 405, 265-48*i);
    textSize(14);
    text(tempC, 370, 300);
    fill(120);
    rect(401, 290, 20, 15);
    fill(255);
    text("°C", 405, 300);
  }
}
void goccia() {
  float x=590;
  for ( int i = 2; i < 50; i++ ) {
    float y=35 + i*4;
    fill(0, 255, 255);
    ellipse(x, y, i*2, i*2);
  }
  fill(255);
  textSize(15);
  text(RH, 565, 300);
  fill(120);
  rect(598, 285, 20, 15);
  fill(255);
  text("%", 600, 300);
}

void quadrato() {
  fill(120);
  rect(435, 330, 110, 110);
}
